{"ast":null,"code":"var _jsxFileName = \"D:\\\\College Work\\\\Hackathon\\\\SBusTrack\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport firebase from \"./Firebase\";\nimport a from \"./img.png\";\nimport GoogleMapReact from 'google-map-react';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      center: {\n        lat: 27.714750,\n        lng: 85.309285\n      },\n      buses: [],\n      zoom: 15,\n      status: true,\n      bus: {}\n    };\n\n    this.requestBus = () => {\n      fetch('http://localhost:4000/request_bus?pid=' + 1).then(response => response.json()) // .then(response => this.setState({favourites: response.data}))\n      .then(response => console.log(response.data)).then(console.log(\"sadfsda\")).catch(err => console.error(err.toString()));\n    };\n\n    this.showPosition = position => {\n      console.log(position);\n      this.setState({\n        center: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        status: true\n      }); // console.log(this.state.center)\n    };\n  }\n\n  componentDidMount() {\n    console.log(navigator.geolocation.watchPosition(this.showPosition));\n    const busRef = firebase.database().ref('online_drivers');\n    busRef.on('value', snapshot => {\n      console.log(\"From bus\");\n      let buses = snapshot.val();\n      let newState = [];\n\n      for (let bus in buses) {\n        // console.log(buses[bus])\n        newState.push({\n          center: {\n            lat: buses[bus].lat,\n            lng: buses[bus].lng,\n            text: \"bus \" + bus\n          }\n        });\n      } // console.log(\"NEW STATE\")\n      // console.log(newState);\n\n\n      this.setState({\n        buses: newState\n      });\n    });\n    this.requestBus();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.status ? React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyBLFv4JVBlC3pXdvO7TBUBVWgrEq4bb_y0\"\n      },\n      defaultCenter: this.state.center,\n      defaultZoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(AnyReactComponent, {\n      lat: this.state.center.lat,\n      lng: this.state.center.lng,\n      text: \"me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), console.log(this.state.buses), this.state.buses.map(center => React.createElement(AnyReactComponent, {\n      lat: center.center.lat,\n      lng: center.center.lng,\n      text: center.center.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))) : \"\");\n  }\n\n}\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, text); // const AnyReactComponent = ({ text }) => <img src={a} height={\"30px\"} width={\"30px\"}/>;\n\n\nexport default App;","map":{"version":3,"sources":["D:/College Work/Hackathon/SBusTrack/src/App.js"],"names":["React","firebase","a","GoogleMapReact","App","Component","state","center","lat","lng","buses","zoom","status","bus","requestBus","fetch","then","response","json","console","log","data","catch","err","error","toString","showPosition","position","setState","coords","latitude","longitude","componentDidMount","navigator","geolocation","watchPosition","busRef","database","ref","on","snapshot","val","newState","push","text","render","height","width","key","map","AnyReactComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport firebase from \"./Firebase\";\nimport a from \"./img.png\";\nimport GoogleMapReact from 'google-map-react';\nclass App extends React.Component{\n  state = {\n    center: {\n      lat: 27.714750,\n      lng: 85.309285\n    },\n    buses:[],\n    zoom: 15,\n    status: true,\n    bus:{}\n  };\n\n  componentDidMount(){\n    console.log(navigator.geolocation.watchPosition(this.showPosition))\n    const busRef = firebase.database().ref('online_drivers');\n    busRef.on('value', (snapshot)=>{\n      console.log(\"From bus\")\n      let buses = snapshot.val();\n      let newState = [];\n      for(let bus in buses){\n        // console.log(buses[bus])\n        newState.push({center:{lat:buses[bus].lat, lng:buses[bus].lng, text:\"bus \"+bus}})\n      }\n      // console.log(\"NEW STATE\")\n      // console.log(newState);\n      this.setState({\n        buses:newState\n      })\n    })\n    this.requestBus()\n  }\n\n  requestBus = () => {\n    fetch('http://localhost:4000/request_bus?pid=' + 1)\n        .then(response => response.json())\n        // .then(response => this.setState({favourites: response.data}))\n        .then(response => console.log(response.data))\n        .then(console.log(\"sadfsda\"))\n        .catch(err => console.error(err.toString()))\n  }\n\n  showPosition = (position) => {\n    console.log(position)\n    this.setState({\n      center:{\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      },\n      status : true\n\n    })\n\n    // console.log(this.state.center)\n  }\n\n  render(){\n  return (\n    <div style={{ height: '100vh', width: '100%' }}>\n      {this.state.status?\n    <GoogleMapReact\n      bootstrapURLKeys={{ key: \"AIzaSyBLFv4JVBlC3pXdvO7TBUBVWgrEq4bb_y0\" }}\n      defaultCenter={this.state.center}\n      defaultZoom={this.state.zoom}\n    >\n      <AnyReactComponent\n          lat={this.state.center.lat}\n          lng={this.state.center.lng}\n          text=\"me\"\n      />\n      {console.log(this.state.buses)}\n      {this.state.buses.map((center)=>(\n          <AnyReactComponent\n            lat={center.center.lat}\n            lng={center.center.lng}\n            text={center.center.text}\n        />\n      ))}\n\n    </GoogleMapReact>\n    : \"\"}\n  </div>\n  );\n  }\n}\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n// const AnyReactComponent = ({ text }) => <img src={a} height={\"30px\"} width={\"30px\"}/>;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}